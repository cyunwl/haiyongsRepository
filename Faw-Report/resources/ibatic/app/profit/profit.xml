<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="profit">

<select id="initDate" resultClass="java.util.HashMap">
	Select to_char(to_date(e,'yyyy-MM'),'yyyy-MM') Begindate,
	       to_char(to_date(b,'yyyy-MM'),'yyyy-MM') Enddate
	  From (
	  Select Min(p.Ym) e,Max(p.Ym) b From Fdm_Faw_Rebate p
	)
</select>

<select id="findPurchaseCity" resultClass="java.util.HashMap">
	Select Distinct v.Year,
                (Select Wmsys.Wm_Concat(Tv.City_Name)
                   From v_User_Purchaser_City Tv Where v.Year = tv.Year) city
  		From v_User_Purchaser_City v
 	Order By v.Year Desc
</select>

<select id="getMainData" resultClass="com.ways.app.profit.model.VProfit">
	<!-- 查询一汽大众的所有型号的基础信息表（一汽大众的用户组） -->
	select t.* from (
		select a.*, rownum as rowIndex from (
				select tab.*, count(1) over() totalCount from (
							With Base As(
							  Select Version.version_Id versionId,
							         Version.version_Code versionCode,
							         Segment.Parent_Grade_Name segmentParentName,
                             		 Segment.Grade_Name_Cn || '-' || Segment.Sub_Grade_Name segmentNameCn,
                             		 Segment.Grade_Name_En || '-' || Segment.Sub_Grade_Name SegmentNameEn,
							         Manf.Manf_Name_Cn ManfNameCn,
							         Manf.Manf_Name_En ManfNameEn,
							         Brand.Brand_Name_Cn BrandNameCn,
							         Brand.Brand_Name_En BrandNameEn,
							         Emissions.Emissions_Name EmissionsName,
							         Transmission.Trnsms_Name_Cn TrnsmsNameCn,
							         Transmission.Trnsms_Name_En TrnsmsNameEn,
							         Version.Version_Name_Cn VersionNameCn,
							         Version.Version_Name_En VersionNameEn,
							         Version.Version_Short_Name_Cn VersionShortNameCn,
							         Version.Version_Short_Name_En VersionShortNameEn，  
							         Submodel.Submodel_Name_Cn SubmodelNameCn,
							         Submodel.Submodel_Name_En SubmodelNameEn,
							         w_Bodytype.Body_Type_Name_Cn BodyTypeNameCn,
							         w_Bodytype.Body_Type_Name_En BodyTypeNameEn,
							         Submodel.Submodel_Id submodelId
							    From Fdm_Car_Version Version
							  <!-- 月报 -->
							  <isEqual property="qReportType" compareValue="1">
							   Inner Join Fdm_Faw_Report_Version_Month Monthversion On Monthversion.version_Id = Version.version_Id
							  </isEqual>
							  <!-- 周报 -->
							  <isEqual property="qReportType" compareValue="0">
							   Inner Join fdm_faw_report_version_week weekVersion On weekVersion.version_Id = version.version_Id
							  </isEqual>
							  
							   Inner Join Fdm_Car_Submodel             Submodel       On Version.submodel_Id = Submodel.submodel_Id  
							   Inner Join Fdm_Car_Model                Model          On Submodel.Model_Id = Model.Model_Id  
							   Inner Join Fdm_Car_Manf                 Manf           On Submodel.Manf_Id = Manf.Manf_Id  
							   Inner Join Fdm_Car_Brand                Brand          On Submodel.Brand_Id = Brand.Brand_Id  
							   Inner Join V_Faw_Info_Grade             M_Segment      On Model.Model_Id = M_Segment.Model_Id  
							   Inner Join V_Faw_Grade                  Segment        On M_Segment.Grade_Id = Segment.Grade_Id
							   Inner Join Fdm_Car_Emissions            Emissions      On Version.Emissions_Id = Emissions.Emissions_Id  
							   Inner Join Fdm_Car_Transmission         Transmission   On Version.Trnsms_Id = Transmission.Trnsms_Id  
							   Inner Join Fdm_Faw_Body_Type            f_Bodytype     On f_Bodytype.submodel_Id = Submodel.submodel_Id  
							   Inner Join Fdm_Ways_Body_Type           w_Bodytype     On f_Bodytype.Body_Type_Id = w_Bodytype.Body_Type_Id
							   Where f_Bodytype.Group_Id = 2 
							   <!-- and version.version_id =3587 -->
							),
							Msrp As(
							Select Base.versionId, Base.versionCode,Msrp.Ym, Msrp.Msrp, Msrp.Week
							  From Fdm_Version_State_Msrp Msrp
							 Inner Join Base              Base         On Base.versionId = Msrp.Version_Id
							 Where Msrp.Ym Between '$qBeginDate$' And '$qEndDate$'
							 <!-- 月报 -->
						     <isEqual property="qReportType" compareValue="1">
						   		  And Msrp.Week In (7)
						     </isEqual>
						     <!-- 周报 -->
						     <isEqual property="qReportType" compareValue="0">
						  		  And Msrp.Week In (1,2,3,4)
						     </isEqual>
							),
							Tp As(
							Select Distinct version_Id,
							                version_Code,
							                Ym,
							                Week,
							           Case When Max(e.MaxCityMix) over(partition by version_Id,Ym,Week) Is Not Null 
							                Then Sum(e.price) Over(Partition By version_Id,Ym,Week)
							                Else Avg(e.minPrice) Over(Partition By version_Id,Ym,Week) 
							                End price 
							     From (
							        Select version_Id,version_Code,Ym,Week,City_Id,cSort,Min(Min_Price) minPrice,Max(Value) maxCityMix,
							               Case When Max(value) Is Not Null 
							                    Then min(Min_Price) *  ratio_to_report(sum(value)) over(partition by version_Id,Ym,Week)
							                    Else Null
							                    End price 
							           From (
							                  Select tp.version_Id,
							                         tp.version_Code,
							                         tp.Ym,
							                         tp.Week,
							                         tp.Min_Price,
							                         tp.City_Id,
							                         Purchasercity.cSort,
							                         Citymix.Value
							                    From Fdm_Version_City_Price tp           
							                    Inner Join Base                  Base          On Base.versionId = tp.version_Id
							                    Inner Join v_User_Purchaser_City Purchasercity On tp.City_Id = Purchasercity.City_Id
							                    Left  Join Fdm_Model_City_Mix    Citymix       On Base.submodelId = Citymix.Sub_Model_Id
							                     And  tp.City_Id = Citymix.City_Id
							                <!-- 之前4.0系统中是通过自动判断的,现在修改为手动选择(所选时间成交价对应城市Mix由界面操作指定关联) -->    
							                <!-- And Citymix.Year = (Case When tp.Year <![CDATA[ <= ]]> 2013 Then 2013 Else tp.Year - 1 End) -->
							                	 <isNotNull property="qDateType">
							                	 And Citymix.Year = ($qDateType$ -1)
							                	 </isNotNull>
							                   Where  tp.Min_Price Is Not Null And tp.Ym Between '$qBeginDate$' And '$qEndDate$'
							                  <!-- 月报 -->
											  <isEqual property="qReportType" compareValue="1">
											   		And tp.Week In (7)
											  </isEqual>
											  <!-- 周报 -->
											  <isEqual property="qReportType" compareValue="0">
											  		And tp.Week In (1,2,3,4)
											  </isEqual>
											  
											  <isNotNull property="qDateType">
							                	 	And Purchasercity.Year = $qDateType$
							                  </isNotNull>
							            )d
							       Group By d.version_Id,d.version_Code,d.Ym,d.Week,d.City_Id,d.cSort
							    )e    
							)
							,rebate As (
						        Select r.Ym,
						               r.Week,
						               r.Version_Id,
						               b.Versioncode,
						        	   r.Rebate_Count Rebate_Cash,
						               r.Rebate_Pst   Allowance,
						               r.Reward_Count Ck_Reward
						          From Fdm_Faw_Rebate r
						         Inner Join Base b
						            On r.Version_Id = b.Versionid
						         Where r.Ym Between '$qBeginDate$' And '$qEndDate$'
						          <!-- 月报 -->
								  <isEqual property="qReportType" compareValue="1">
								   		And r.Week In (7)
								  </isEqual>
								  <!-- 周报 -->
								  <isEqual property="qReportType" compareValue="0">
								  		And r.Week In (1,2,3,4)
								  </isEqual>
						   )
						   , Sale As(
							  Select s.version_id,s.version_sale,s.Year || Lpad(s.Month, 2, 0) ym
							    From Fdm_Version_Sales s
							    Inner Join base b On s.version_id = b.versionid
							  <!-- 斜对应 -->
							  <isEqual property="qSaleType" compareValue="0">
							   		Where s.Year || Lpad(s.Month, 2, 0) Between to_char(add_months(to_date('$qBeginDate$','YYYYMM'),-1),'YYYYMM') And to_char(add_months(to_date('$qEndDate$','YYYYMM'),-1),'YYYYMM')
							  </isEqual>
							   <!-- 正对应 -->
							  <isEqual property="qSaleType" compareValue="1">
							   		Where s.Year || Lpad(s.Month, 2, 0) Between '$qBeginDate$' And '$qEndDate$'
							  </isEqual>
							)
						   Select /*+ rule */
						   	      Base.Versionid,
						          Base.Versioncode,
						          Base.SegmentParentName,
						          Base.Segmentnamecn,
						          Base.Segmentnameen,
						          Base.Manfnamecn,
						          Base.Manfnameen,
						          Base.Brandnamecn,
						          Base.Brandnameen,
						          Base.Emissionsname,
						          Base.Trnsmsnamecn,
						          Base.Trnsmsnameen,
						          Base.Versionnamecn,
						          Base.Versionnameen,
						          Base.Versionshortnamecn,
						          Base.Versionshortnameen,
						          Base.Submodelnamecn,
						          Base.Submodelnameen,
						          Base.Bodytypenamecn,
						          Base.Bodytypenameen,
						          Rebate.Ym,
						          Rebate.Week,
						          round(Tp.Price) price,
						          Msrp.Msrp,
						          round(Msrp.Msrp - Rebate.Rebate_Cash - Rebate.Allowance - Rebate.Ck_Reward) Sellercost,
						          round(Msrp.Msrp - Rebate.Rebate_Cash - Rebate.Allowance) Invoiceprice,
						          round(Rebate.Rebate_Cash) Rebateprice,
						          round(Rebate.Ck_Reward) Rewardassessment,
						          round(Rebate.Allowance) Promotionalallowance,
						          round(Tp.Price - (Msrp.Msrp - Rebate.Rebate_Cash - Rebate.Allowance)) Modelprofit,					   
						     	  round(Nvl(sale.version_sale,0)) Sale
						     From Tp, Msrp, Rebate,Sale, Base
						    Where Rebate.Version_Id = Tp.Version_Id(+)
						      And Rebate.Ym = Tp.Ym(+)
						      And Rebate.Week = Tp.Week(+)
						      And Rebate.Version_Id = Msrp.Versionid(+)
						      And Rebate.Ym = Msrp.Ym(+)
						      And Rebate.Week = Msrp.Week(+)
						      And Rebate.Version_Id = Base.Versionid(+)
						       <!-- 斜对应 -->
							  <isEqual property="qSaleType" compareValue="0">
							   		And to_char(add_months(to_date(Rebate.Ym,'YYYYMM'),-1),'YYYYMM') = sale.ym(+)
							  </isEqual>
							   <!-- 正对应 -->
							  <isEqual property="qSaleType" compareValue="1">
							   		And Rebate.Ym = sale.ym(+)
							  </isEqual>
                              And Rebate.Version_Id = sale.Version_Id(+)
				)tab where 1=1
				<isNotEmpty property="qYm" prepend="and">
					upper(tab.ym) like upper('%$qYm$%')
		        </isNotEmpty>
		        <isNotEmpty property="qWeek" prepend="and">
		       		Decode(tab.week,1,'第一周',2,'第二周',3,'第三周',4,'第四周',7,'月') like upper('%$qWeek$%')
		        </isNotEmpty>
		        <isNotEmpty property="qManfNameCn" prepend="and">
		       		upper(tab.manfNameCn) like upper('%$qManfNameCn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qBrandNameCn" prepend="and">
		       		upper(tab.brandNameCn) like upper('%$qBrandNameCn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qSegmentParentName" prepend="and">
					upper(tab.segmentParentName) like upper('%$qSegmentParentName$%')
		        </isNotEmpty>
		        <isNotEmpty property="qSegmentNameCn" prepend="and">
					upper(tab.segmentNameCn) like upper('%$qSegmentNameCn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qBodyTypeNameCn" prepend="and">
		       		upper(tab.bodyTypeNameCn) like upper('%$qBodyTypeNameCn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qVersionNameCn" prepend="and">
		       		upper(tab.versionNameCn) like upper('%$qVersionNameCn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qSubmodelNameCn" prepend="and">
		       		upper(tab.submodelNameCn) like upper('%$qSubmodelNameCn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qVersionShortNameEn" prepend="and">
		       		upper(tab.versionShortNameEn) like upper('%$qVersionShortNameEn$%')
		        </isNotEmpty>
		        <isNotEmpty property="qVersionCode" prepend="and">
		       		upper(tab.versionCode) like upper('%$qVersionCode$%')
		        </isNotEmpty>
		        <isNotEmpty property="qMsrp" prepend="and">
					upper(tab.msrp) like upper('%$qMsrp$%')
		        </isNotEmpty>
		        <isNotEmpty property="qRebatePrice" prepend="and">
		       		upper(tab.rebatePrice) like upper('%$qRebatePrice$%')
		        </isNotEmpty>
		        <isNotEmpty property="qRewardAssessment" prepend="and">
		       		upper(tab.rewardAssessment) like upper('%$qRewardAssessment$%')
		        </isNotEmpty>
		        <isNotEmpty property="qPromotionalAllowance" prepend="and">
		       		upper(tab.promotionalAllowance) like upper('%$qPromotionalAllowance$%')
		        </isNotEmpty>
		        <isNotEmpty property="qInvoicePrice" prepend="and">
		       		upper(tab.invoicePrice) like upper('%$qInvoicePrice$%')
		        </isNotEmpty>
		        <isNotEmpty property="qPrice" prepend="and">
		       		upper(tab.price) like upper('%$qPrice$%')
		        </isNotEmpty>
		        <isNotEmpty property="qModelProfit" prepend="and">
		       		upper(tab.modelProfit) like upper('%$qModelProfit$%')
		        </isNotEmpty>
		        <isNotEmpty property="qSale" prepend="and">
		       		upper(tab.sale) like upper('%$qSale$%')
		        </isNotEmpty>		        		        
				<isNotEmpty property="order">
					$order$
				</isNotEmpty>
				<isEmpty property="order">
					order by tab.ym,tab.week,tab.versioncode Desc
				</isEmpty>
			) a
	 ) t
	where 1=1
		<isNotEmpty property="start" prepend="and">
			t.rowIndex > $start$  and t.rowIndex <![CDATA[ <=  ]]> $limit$
		</isNotEmpty>
</select>

</sqlMap>
