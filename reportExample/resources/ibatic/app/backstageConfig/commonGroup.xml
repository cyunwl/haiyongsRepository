<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="commonGroup">
<select id="getCommonGroupData" resultClass="com.ways.app.backstageConfig.model.CommonGroup">
select b.custom_group_id           groupId,
	   b.custom_group_name         groupName,
       b.custom_group_sort         groupSort,
       e.manf_name_cn              manfName,
       d.subModel_id	           subModelId,
       d.subModel_name_cn          subModelName,
       a.version_id                versionId,
       c.version_name_cn           versionName,
       c.version_code              versionCode,
       a.is_jp                     isJP,
       f.MSRP                      MSRP,
       a.custom_group_version_sort versionSort
  from fdm_custom_group_version a
  left join fdm_custom_group b
    on b.custom_group_id = a.custom_group_id
  left join fdm_car_version c
    on c.version_id = a.version_id
  left join fdm_car_subModel d
    on c.subModel_id = d.subModel_id
  left join fdm_car_manf e
    on c.manf_id = e.manf_id
  left join (select version_id, msrp
               from (select a.version_id,
                            a.version_code,
                            a.msrp,
                            a.ym,
                            row_number() over(partition by a.version_id order by a.ym desc, a.week desc) rn
                       from fdm_version_state_msrp a
                      where 
                        <![CDATA[ a.week < '6' ]]>
                        and a.version_id in
                            (select version_id from fdm_custom_group_version))
              WHERE rn = 1) f
    on a.version_id = f.version_id
 where 1 = 1
	  <isNotEmpty property="groupName">
	    and regexp_like(b.custom_group_name, '$groupName$', 'i')
	  </isNotEmpty>
	    <isNotEmpty property="manfName">
	    and regexp_like(e.manf_name_cn, '$manfName$', 'i')
	  </isNotEmpty>
	    <isNotEmpty property="subModelName">
	    and regexp_like(d.subModel_name_cn, '$subModelName$', 'i')
	  </isNotEmpty>
      <isNotEmpty property="versionName">
        and regexp_like(c.version_name_cn, '$versionName$', 'i') 					
	  </isNotEmpty>
	    <isNotEmpty property="MSRP">
	    and regexp_like(f.msrp, '$MSRP$', 'i')
	  </isNotEmpty>
    order by b.custom_group_sort, a.custom_group_version_sort
</select>

<!-- 根据条件获取有效车型公共SQL -->
<sql id="getSubModel">
	 Select Distinct p.subModel_id SubModelId
      From v_Segment_Model o
     Inner Join Fdm_Segment Gr On o.Group_Id = Gr.Group_Id And o.Segment_Id = Gr.Segment_Id
     Inner Join Fdm_Car_Submodel p On o.Model_Id = p.Model_Id
     Inner Join Fdm_Car_Brand y On p.Brand_Id = y.Brand_Id
     Inner Join fdm_car_orig orig On y.orig_id = orig.orig_id
     Inner Join Fdm_Car_Manf u On p.Manf_Id = u.Manf_Id
     Inner Join Fdm_Car_Port_Type Cci On u.Port_Type_Id = Cci.Port_Type_Id
     Inner Join Fdm_Car_Version n On p.SubModel_Id = n.SubModel_Id
     Inner Join Fdm_Faw_Body_Type t On p.subModel_id = t.subModel_id
</sql>

<sql id="getUserGroupGradeSubModel">
	with t1 as(
		select d.*
			  from (Select Distinct g.Segment_Id grade_id,
					                g.Segment_Name_Cn grade_name_cn,
					                g.Segment_Parent_Id parent_id,
					                c.SubModel_Id subModelId,
					                c.SubModel_Name_Cn subModelName,
					                s.Port_Type_Id car_in,
					                s.Manf_Id manfId,
					                s.Manf_Name_Cn manfName,
					                p.Brand_Id brandId,
					                p.Brand_Name_Cn brandName,
					                Upper(getletter(substr(p.Brand_Name_Cn, 0, 1))) brandLetter,
					                Upper(getletter(substr(s.Manf_Name_Cn, 0, 1))) manfLetter
					  From Fdm_Segment g
					 Inner Join v_Segment_Model i  On g.Segment_Id = i.Segment_Id
					 Inner Join Fdm_Car_Model b    On b.Model_Id = i.Model_Id
					 Inner Join Fdm_Car_Submodel c On c.Model_Id = b.Model_Id
					 Inner Join Fdm_Car_Manf s     On s.Manf_Id = c.Manf_Id
					 Inner Join Fdm_Car_Brand p    On p.Brand_Id = c.Brand_Id
			  ) d
			 ,(
			 		<include refid="getSubModel"/>
			  ) c 
			  Where c.subModelId = d.subModelId
	)
</sql>

<!-- 获取品牌下子车型关系 -->
<resultMap class="com.ways.app.backstageConfig.model.SubModel" id="getSubModelByBrandGroup3">
	<result property="subModelId" column="subModelId" nullValue="" />
	<result property="subModelName" column="subModelName" nullValue="" />
	<result property="pooAttributeId" column="car_in" nullValue="" />
</resultMap>
<resultMap class="com.ways.app.backstageConfig.model.Brand" id="getSubModelByBrandGroup2" groupBy="brandId">
	<result property="brandId" column="brandId" nullValue="" />
	<result property="brandName" column="brandName" nullValue="" />
	<result property="subModelList" resultMap="commonGroup.getSubModelByBrandGroup3" />
</resultMap>
<resultMap class="com.ways.app.backstageConfig.model.LetterObj" id="getSubModelByBrandGroup1" groupBy="letter">
	<result property="letter" column="brandletter" nullValue="" />
	<result property="objList" resultMap="commonGroup.getSubModelByBrandGroup2" />
</resultMap>
<select id="getSubModelByBrand" resultMap="getSubModelByBrandGroup1">

	<include refid="getUserGroupGradeSubModel"/>			
	select * from t1 order by t1.brandletter,t1.brandId,t1.submodelid
</select>

<!-- 获取厂商 下子车型关系 -->
<resultMap class="com.ways.app.backstageConfig.model.SubModel" id="getSubModelByManfGroup3">
	<result property="subModelId" column="subModelId" nullValue="" />
	<result property="subModelName" column="subModelName" nullValue="" />
	<result property="pooAttributeId" column="car_in" nullValue="" />
</resultMap>
<resultMap class="com.ways.app.backstageConfig.model.Manf" id="getSubModelByManfGroup2" groupBy="manfId">
	<result property="manfId" column="manfId" nullValue="" />
	<result property="manfName" column="manfName" nullValue="" />
	<result property="subModelList" resultMap="commonGroup.getSubModelByManfGroup3" />
</resultMap>
<resultMap class="com.ways.app.backstageConfig.model.LetterObj" id="getSubModelByManfGroup1" groupBy="letter">
	<result property="letter" column="manfLetter" nullValue="" />
	<result property="objList" resultMap="commonGroup.getSubModelByManfGroup2" />
</resultMap>
<select id="getSubModelByManf" resultMap="getSubModelByManfGroup1">
	<include refid="getUserGroupGradeSubModel"/>		
	select * from t1 order by t1.manfletter,t1.manfid,t1.submodelid
</select>

<!-- 获取子车型下型号数据 -->
<resultMap class="com.ways.app.backstageConfig.model.SubModel" id="getVersionModalByCommonGroup1" groupBy="subModelId">
	<result property="subModelId" column="submodelid" nullValue="" />
	<result property="subModelName" column="submodelname" nullValue="" />
	<result property="versionList" resultMap="commonGroup.getVersionModalByCommonGroup2" />
</resultMap>
<resultMap class="com.ways.app.backstageConfig.model.Version" id="getVersionModalByCommonGroup2">
	<result property="versionId" column="vid" nullValue="" />
	<result property="versionName" column="vanme" nullValue="" />
	<result property="msrp" column="msrp" nullValue="-" />
</resultMap>
<select id="getVersionModal" resultMap="getVersionModalByCommonGroup1">
	select v.version_id            vid,
           v.parentid,
           c.submodel_id           submodelid,
           c.submodel_name_cn      submodelname,
           v.year                  fyear,
           v.version_short_name_cn typeid,
           c.submodel_name_cn || ' ' || v.year || ' ' ||
           v.version_short_name_cn vanme,
           d.msrp                  msrp
             from fdm_car_submodel c
             inner join fdm_car_version v on v.submodel_id = c.submodel_id
             left join (select msrp,vid from (
                           select p.Version_Id vid,
                                  p.Msrp,
                                  Row_number() Over(Partition By p.Version_Id Order By p.YM Desc,p.Week Desc) rn
                                  From Fdm_Version_State_Msrp p 
                                  Where p.Week Not In(6,7)
                            ) where rn = 1) d on d.vid = v.version_id
             where c.submodel_id in ($subModelIds$) and (v.halt_no_sale_date is null or v.halt_no_sale_date >= to_date('20120101','yyyymmdd'))
</select>

<!-- 删除常用对象组 -->
<delete id="deleteCommonGroup">
    delete from fdm_custom_group t where t.custom_group_name = '$groupName$' and t.custom_group_sort = $groupSort$
</delete>
<delete id="deleteCommonGroupVersion">
	delete from fdm_custom_group_version t1 where t1.custom_group_id in (select custom_group_id from 
		fdm_custom_group where custom_group_name ='$groupName$' and custom_group_sort = $groupSort$)
</delete>

<!-- 添加常用对象组 通过导入文件数据方式 开始-->
<insert id="addCommonGroupByImport">
   <![CDATA[
    insert into fdm_custom_group select sys_guid(), v.submodel_id, $groupSort$, '$groupName$', $groupSort$, v.version_id from fdm_car_version v
       where v.version_code = '$versionCode$'
   ]]>
</insert>
<insert id="addCommonGroupVersionByImport">
    <![CDATA[
       insert into fdm_custom_group_version values (sys_guid(), (select v.version_id from fdm_car_version v where v.version_code = '$versionCode$'), 
    $groupSort$, $isJP$, $versionSort$) 
    ]]>
</insert>
<!-- 添加常用对象组 通过导入文件数据方式 结束-->

<!-- 添加常用对象组 通过页面新增方式 开始-->
<insert id="addCommonGroupByAdd">
   <![CDATA[
    insert into fdm_custom_group select sys_guid(), b.subModel_id, $groupSort$, '$groupName$', $groupSort$, $versionId$ from fdm_car_version b where b.version_id = $versionId$
   ]]>
</insert>
<insert id="addCommonGroupVersionByAdd">
   <![CDATA[
    insert into fdm_custom_group_version values (sys_guid(), $versionId$, $groupSort$, $isJP$, $versionSort$)  
   ]]>
</insert>
<!-- 添加常用对象组 通过页面新增方式 结束-->

<!-- 根据分组名称获取分组信息 -->
<select id="getBPInfoByGroupName" resultClass="com.ways.app.backstageConfig.model.CommonGroup">
    select distinct t.custom_group_name groupName,
           t.custom_group_sort groupSort,
           t.bp_model_id       subModelId,
           b.submodel_name_cn  subModelName,
           t.bp_version_id     versionId,
           b.subModel_name_cn || ' ' || v.year ||
           v.version_short_name_cn   versionName 
             from fdm_custom_group t, fdm_car_submodel b, fdm_car_version v
              where t.custom_group_name = '$groupName$' 
                and t.bp_model_id = b.submodel_id 
                and t.bp_version_id = v.version_id
</select>
<select id="getJPInfoByGroupName" resultClass="com.ways.app.backstageConfig.model.CommonGroup">
     select b.submodel_id       subModelId, 
            b.submodel_name_cn  subModelName, 
            v.version_id        versionId, 
            b.subModel_name_cn || ' ' || v.year ||
            v.version_short_name_cn   versionName 
            from fdm_custom_group_version t, fdm_car_version v, fdm_car_submodel b 
              where custom_group_id in (select custom_group_id from fdm_custom_group where custom_group_name= '$groupName$') 
               and is_jp = 1 and t.version_id = v.version_id and v.submodel_id = b.submodel_id
</select>

<!-- 更新常用对象组的型号排序 -->
<update id="updateCommonGroupVersionSort">
    update fdm_custom_group_version set custom_group_version_sort = $versionNewSort$ where custom_group_id = $groupId$ and version_id = $versionId$
</update>
<update id="updateCommonGroupGroupSort">
    update fdm_custom_group set custom_group_sort = $groupNewSort$ where custom_group_id = $groupId$
</update>

<!-- 修改常用对象组 -->
<delete id="deleteCommonGroupByUpdate">
    delete from fdm_custom_group where custom_group_id = $groupId$ and custom_group_name = '$groupName$'
</delete>
<delete id="deleteCommonGroupVersionByUpdate">
	delete from fdm_custom_group_version where custom_group_id = $groupId$
</delete>
<insert id="addCommonGroupByUpdate">
    insert into fdm_custom_group values (sys_guid(), $subModelId$, $groupId$, '$groupName$', $groupSort$, $versionId$)
</insert>
<insert id="addCommonGroupVersionByUpdate">
    insert into fdm_custom_group_version values (sys_guid(), $versionId$, $groupId$, $isJP$, $jpSort$)
</insert>
</sqlMap>